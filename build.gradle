plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.0'
}

group 'moe.exusiaimoe'
version '1.0-SNAPSHOT'

repositories {

    maven {
        url = 'https://jitpack.io'
    }
    mavenCentral()
}



dependencies {
    implementation 'net.mamoe:mirai-core:2.7-M2-dev-1'
}

jar {
    manifest {
        attributes 'Main-Class': 'moe.exusiaimoe.Ash'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    }
}


//jar {
//    manifest {
//        attributes(
//                'Main-Class': 'moe.exusiaimoe.Ash',
//        )
//    }
//}
//
//task fatJar(type: Jar) {
//    manifest.from jar.manifest
//    classifier = 'all'
//    from {
//        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
//    } {
//        exclude "META-INF/*.SF"
//        exclude "META-INF/*.DSA"
//        exclude "META-INF/*.RSA"
//    }
//    with jar
//}


tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
    // JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
    // We'll use that if it's available, but otherwise we'll use the older option.
    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release = targetVersion
    }
}
