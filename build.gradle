plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.32'
}

group 'moe.exusiaimoe'
version '1.0-SNAPSHOT'

repositories {

//    maven {
//        url = 'https://repo.mattmalec.com/repository/releases'
//    }
    maven {
        url = 'https://jitpack.io'
    }
    mavenCentral()
}



dependencies {
    implementation 'net.mamoe:mirai-core:2.6.4'
    //implementation 'com.github.Pequla:RconCore:1.2'
    //implementation 'com.mattmalec:Pterodactyl4J:1.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    //implementation 'com.google.code.gson:gson:2.8.7'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': 'moe.exusiaimoe.Ash'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA', '**/module-info.class'
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
    // JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
    // We'll use that if it's available, but otherwise we'll use the older option.
    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release = targetVersion
    }
}